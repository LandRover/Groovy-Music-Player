{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 6448d8897f0020f28091","webpack:///./src/javascript/gplayer.js","webpack:///./src/javascript/core.js","webpack:///./src/javascript/utils/event.js","webpack:///./src/javascript/core/api.js","webpack:///./src/javascript/utils/logger.js","webpack:///./src/javascript/player.js","webpack:///./src/javascript/core/init.js","webpack:///./src/javascript/controller/controller.js","webpack:///./src/javascript/model/model.js","webpack:///./src/javascript/model/base_model.js","webpack:///./src/javascript/events/events.js","webpack:///./src/javascript/model/media_model.js","webpack:///./src/javascript/events/states.js","webpack:///./src/javascript/view/view.js","webpack:///./src/javascript/view/error.js","webpack:///./src/javascript/bind/jquery.js","webpack:///./src/javascript/exports/amd.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6448d8897f0020f28091\n **/","define([\n    \"./core\",\n    \"./player\",\n    \"./exports/amd\"\n], function(gPlayer, Player) {\n    /* global __webpack_public_path__:true */\n    __webpack_public_path__ = 'get current path here! @todo';\n    \n    console.log(gPlayer);\n    \n    return (window.gPlayer = gPlayer);\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/gplayer.js\n ** module id = 0\n ** module chunks = 0\n **/","define([\n    \"./utils/event\",\n    \"./core/api\",\n    \"./utils/logger\",\n], function(Event, API, Logger) {\n    var version = \"@VERSION\",\n        gPlayer;\n\n    /**\n     * gPlayer main object\n     *\n     * When called running the create method from the Core.init object.\n     */\n    gPlayer = function(options) {\n        Logger.debug('CORE::INIT FIRED');\n        \n        return new gPlayer.prototype.create(options); // jquery like creation method, nice idea\n    };\n    \n    gPlayer.prototype = {\n        /* active gplayer element on DOM */\n        el: null,\n        \n        /* options object */\n        options: {},\n        \n        /* gplayer version, set during build */\n        version: version,\n        \n        /* constructor */\n        constructor: gPlayer,\n        \n        \n        /**\n         * Set the active HTML element, gplayer will append the markup there.\n         * \n         * @param {DOMElement} el\n         * @return {Object} gPlayer instance\n         */\n        setEl: function(el) {\n            this.el = el;\n            \n            return this;\n        },\n        \n        \n        /**\n         * Get the active HTML elemnt gplayer is bound to\n         * \n         * @return {DOMElement} referance\n         */\n        getEl: function() {\n            return this.el;\n        }\n    };\n    \n    return gPlayer;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/core.js\n ** module id = 1\n ** module chunks = 0\n **/","define([\n    \"../core\",\n], function(gPlayer) {\n    /**\n     * Event based module, publish / subscribe with herarchical events and notifiations.\n     * \n     * Usage:\n     *   Event.on('test_one_event', function() {\n     *      console.log('test 1 event fired');\n     *      console.log(arguments);\n     *   });\n     *\n     *   Event.once('test_two_event', function() {\n     *      console.log('test 2 event fired, once.');\n     *      console.log(arguments);\n     *   });\n     *\n     *   var three = Event.on('test_three_event', function() {\n     *      console.log('test 3 event fired');\n     *   });\n     *\n     *   Event.fire('test_one_event', {eventID: 1}); // fires ok\n     *   Event.fire('test_two_event', {eventID: 2}); // fires ok\n     *   Event.fire('test_two_event', {eventID: 3}); // didnt trigger the event since it was unsubscribed (subscribed once only)\n     *   three.off(); // will remove the test_three_event\n     *   Event.fire('test_three_event', {eventID: 4}); // didnt trigger, was remove line above.\n     */\n    var Event = function() {};\n    \n    Event.prototype = {\n        _subscriptions: {},\n        \n        /**\n        * Attach a callback to an EventName\n        * \n        * @param {string} name\n        * @param {function} callback\n        */\n        on: function(name, callback) {\n            if ('undefined' === typeof(this._subscriptions[name]))\n                this._subscriptions[name] = [];\n            \n            var index = this._subscriptions[name].push(callback) - 1,\n                self = this;\n            \n            // return back a clean remove function with the params encaspulated\n            return (function(name, callback) {\n                return {\n                    off: function() {\n                        return self.off(name, callback);\n                    }\n                };\n            })(name, callback);\n        },\n        \n        \n        /**\n        * Attach a callback to an name, but once only. Will disapear after first execution.\n        * \n        * @param {string} name\n        * @param {function} callback\n        */\n        once: function(name, callback) {\n            var self = this,\n                onceCallback = function() {\n                    self.off(name, onceCallback);\n                    callback.apply(this, arguments);\n                };\n            \n            // preserve the original callback to allow subscribe once method to be removed later if needed.\n            onceCallback._originalCallback = callback;\n            \n            this.on(name, onceCallback);\n        },\n        \n        \n        /**\n        * Notify subscriptions by calling their name\n        * \n        * @param {string} name\n        * @param {object} params\n        */\n        fire: function(name, params) {\n            var callbacks = this._subscriptions[name] || [];\n            \n            callbacks.forEach(function(callback) {\n                callback(params);\n            });\n        },\n        \n        \n        /**\n        * Remove a specific name callback from the stack\n        * \n        * @param {string} name\n        * @param {function} callback\n        */\n        off: function(name, callback) {\n            var callbacks = this._subscriptions[name],\n                matchCallback = function(cb) {\n                    return (cb === callback || cb._originalCallback === callback)\n                };\n            \n            callbacks.forEach(function(eventCallback, i) {\n                if (matchCallback(eventCallback)) {\n                    callbacks.splice(i, 1);\n                }\n            });\n            \n            // if no callbacks left remove the event name from the tree completly.\n            if (0 === callbacks.length) {\n                delete this._subscriptions[name];\n            }\n        },\n        \n        \n        /**\n         * Removes all the subscriptions\n         */\n        removeAllSubscriptions: function() {\n            this._subscriptions = [];\n        },\n        \n        \n        /**\n         * Get all the active subscriptions tree\n         */\n        getAllSubscriptions: function() {\n            return this._subscriptions;\n        }\n    };\n    \n    return Event;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/utils/event.js\n ** module id = 2\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"../utils/logger\"\r\n], function(gPlayer, Logger) {\r\n    /**\r\n     * Public access point for object internals. The only exposed API.\r\n     *\r\n     * Subscribe to events and change internal settings via these methods.\r\n     */\r\n    var API = {\r\n        /**\r\n         * API to On event subscribe method.\r\n         * Allows to subscribe with a specific behaviour trigger action.\r\n         *\r\n         * @param {String} event\r\n         * @param {Mixed} data\r\n         * @return this\r\n         */\r\n        on: function(event, data) {\r\n            Logger.debug('ON FIRED!');\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Begins playing.. Nyan Catttttttttttttttttttt\r\n         *\r\n         * @return this\r\n         */\r\n        play: function() {\r\n            Logger.debug('PLAY FIRED!');\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        \r\n        /**\r\n         * Pauses playing\r\n         *\r\n         * @return this\r\n         */\r\n        pause: function() {\r\n            Logger.debug('PAUSE FIRED!');\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Stops playing\r\n         *\r\n         * @return this\r\n         */\r\n        stop: function() {\r\n            Logger.debug('STOP FIRED!');\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Remove player and clean scope\r\n         *\r\n         * @return this\r\n         */\r\n        remove: function() {\r\n            Logger.debug('REMOVE FIRED!');\r\n            \r\n            return this;\r\n        }\r\n    };\r\n    \r\n    return API;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/core/api.js\n ** module id = 3\n ** module chunks = 0\n **/","define([\n    \"../core\",\n], function(gPlayer) {\n    /**\n     * Basic Logger\n     * \n     * Centralized access for the console.log method.\n     * Wrapps around few method of Console to allow clean and unified API to log errors.\n     *\n     * @todo Consider XHR calls to log errors on server.\n     * @todo Hook to the debug mode, controlled via configuration of the object.\n     */\n    var Logger = {\n        /**\n         * Fatal errors. Mission critial - application can not run when present.\n         * @param {mixed} log\n         */\n        error: function(log) {\n            return this._log('error', log);\n        },\n        \n        \n        /**\n         * Warnning only. Should be fixed but application been able to recover.\n         * @param {mixed} log\n         */\n        warn: function(log) {\n            return this._log('warn', log);\n        },\n        \n        \n        /**\n         * Information only. General info printed.\n         * @param {mixed} log\n         */\n        info: function(log) {\n            return this._log('info', log);\n        },\n        \n        \n        /**\n         * Debug mode. Print as much as possible to allow quick and easy\n         * debugging when needed.\n         */\n        debug: function(log) {\n            return this._log('debug', log);\n        },\n        \n        \n        /**\n         * Private method, provides single point of access to the console.log API.\n         * prevents mess around the code and a clean way to prevent the output of the log\n         * or the sevirity level.\n         *\n         * @param {string} sevirity\n         * @param mixed log\n         * @todo consider stacking the log calls, not so important but might be useful for debugging\n         * @todo display on debug mode only - currently the whole mode is debug.\n         */\n        _log: function(sevirity, log) {\n            if ('undefined' !== typeof(console) && 'undefined' !== typeof(console[sevirity])) {\n                console[sevirity]([sevirity, log]);\n            }\n        }\n    };\n    \n    return Logger;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/utils/logger.js\n ** module id = 4\n ** module chunks = 0\n **/","define([\n    \"./core\",\n    \"./utils/logger\",\n    \"./core/init\",\n], function(gPlayer, Logger) {\n    \n    var Player = function() {\n       this.init();\n    };\n    \n    Player.prototype = {\n        init: function() {\n            Logger.debug('Player constructor fired.');\n        }\n    };\n    \n    return Player;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/player.js\n ** module id = 5\n ** module chunks = 0\n **/","define([\n    \"../core\",\n    \"../controller/controller\",\n    \"../utils/logger\",\n    \"../bind/jquery\", // bind object to the global scope - as a plugin.\n], function(gPlayer, Controller, Logger) {\n    /**\n     * Init is responsible for the object creation process.\n     *\n     * Starts the flow for all the other components\n     */\n    $.extend(true, gPlayer.prototype, {\n        _controller: null,\n        \n        /**\n         * Create method is the constructor method, called from the gPlayer object on invoke.\n         * Returning a new of create.\n         * \n         * One import note is the create is actually is the function that is new`ed\n         * into an object.\n         * \n         * @param {object} options, overrides the default options\n         * @return {object}\n         */\n        create: function(options) {\n            Logger.debug('CORE::INIT::CREATE FIRED');\n            \n            this._controller = new Controller(options);\n            \n            return this;\n        },\n        \n        \n        /**\n         * Start executes the flow.\n         */\n        bootstrap: function() {\n            Logger.debug('CORE::INIT::BOOTSTRAP FIRED');\n            \n            this._controller.bootstrap(this.getEl());\n            \n            return this;\n        }\n    });\n    \n    gPlayer.prototype.create.prototype = gPlayer.prototype;\n    \n    return gPlayer.prototype.create;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/core/init.js\n ** module id = 6\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"../model/model\",\r\n    \"../view/view\",\r\n    \"../events/events\",\r\n    \"../events/states\",\r\n    \"../utils/event\",\r\n    \"../utils/logger\",\r\n], function(gPlayer, Model, View, Events, States, Event, Logger) {\r\n    /**\r\n     * gPlayer main controller\r\n     *\r\n     * Responsible for the general flow and creation of the view and models\r\n     */\r\n    var Controller = function(config) {\r\n        this.init(config);\r\n    };\r\n    \r\n    Controller.prototype = {\r\n        /**\r\n         * Main model referance\r\n         */\r\n        _model: null,\r\n        \r\n        \r\n        /**\r\n         * Notifications referance\r\n         */\r\n        _notifications: null,\r\n        \r\n        \r\n        /**\r\n         * View referance\r\n         */\r\n        _view: null,\r\n        \r\n        \r\n        /**\r\n         * Constructor function for the main controller\r\n         *\r\n         * Registering important instances to hold here\r\n         *\r\n         * @param {Object} config\r\n         * @param {Object}\r\n         * @return this for chaining\r\n         */\r\n        init: function(config) {\r\n            Logger.debug('CONTROLLER::INIT FIRED');\r\n            \r\n            this._model = new Model(config);\r\n            this._notifications = new Event();\r\n            this._view = new View(this, this._model, this._notifications);\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Bootstraps the main controller\r\n         */\r\n        bootstrap: function(container) {\r\n            this._model.setup(container);\r\n            this._view.setup();\r\n        }\r\n    };\r\n    \r\n    return Controller;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/controller/controller.js\n ** module id = 7\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"./base_model\",\r\n    \"./media_model\",\r\n    \"../utils/logger\",\r\n], function(gPlayer, BaseModel, MediaModel, Logger) {\r\n    /**\r\n     * gPlayer Model\r\n     *\r\n     * Stores the current state of the player. Holds the playlist data the the current active media state.\r\n     */\r\n    var Model = function(config) {\r\n        this.init(config);\r\n    };\r\n    \r\n    Model.prototype = $.extend(true, {\r\n        /**\r\n         * Default config data\r\n         */\r\n        config: {\r\n            // controls\r\n            autoplay: false,\r\n            controls: true,\r\n            mute: false,\r\n            \r\n            // skin\r\n            skin: 'grooveshark',\r\n            \r\n            // features\r\n            crossfade: false,\r\n            waveform: false,\r\n            spectrum: false,\r\n            \r\n            // player settings\r\n            state: States.IDLE,\r\n            duration: -1,\r\n            position: 0,\r\n            volume: 100,\r\n            buffer: 0,\r\n            \r\n            // queue sorting properties\r\n            sortable: {\r\n                distance: 30,\r\n                tolerance: 'pointer',\r\n                zIndex: 200\r\n            },\r\n            \r\n            // collection\r\n            playlist: []\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Current media model object, stores data for the current playing item.\r\n         */\r\n        _mediaModel: null,\r\n        \r\n        \r\n        /**\r\n         * Main gPlayer container object selector.\r\n         */\r\n        _container: null,\r\n        \r\n        \r\n        /**\r\n         * Constructor method, called when object is created.\r\n         *\r\n         * @param {Object} config\r\n         * @return this for chaining\r\n         */\r\n        init: function(config) {\r\n            Logger.debug('MODEL::INIT FIRED');\r\n            \r\n            // external config data merge with defaults\r\n            $.extend(true, this, this.config, config);\r\n            \r\n            this._mediaModel = new MediaModel();\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Sets up the main model\r\n         *\r\n         * @param {DOMElement} container\r\n         * @todo add merge with localStorage data to store user preferences locally\r\n         * @return this for chaining\r\n         */\r\n        setup: function(container) {\r\n            Logger.debug('MODEL::SETUP FIRED');\r\n            \r\n            this._container = container;\r\n            \r\n            return this;\r\n        }\r\n    }, new BaseModel);\r\n    \r\n    return Model;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/model/model.js\n ** module id = 8\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"../utils/event\",\r\n    \"../events/events\",\r\n    \"../utils/logger\",\r\n], function(gPlayer, Event, Events, Logger) {\r\n    /**\r\n     * Base Model, all models inherit this shared and basic logic.\r\n     *\r\n     * Provides basic setter and getter capability\r\n     * and on change broadcasts an event with the changes anyone can subscribe.\r\n     */\r\n    var BaseModel = function() {\r\n        Logger.debug('BASEMODEL::CONSTRUCTOR FIRED!');\r\n        $.extend(true, this, new Event);\r\n    };\r\n    \r\n    BaseModel.prototype = {\r\n        /**\r\n         * Getter for the model internals\r\n         *\r\n         * @param {String} key\r\n         * @param {Mixed} defaultValue - if nothing found, will return the default\r\n         * @return {Mixed} stored data or the default value is returned.\r\n         */\r\n        get: function(key, defaultValue) {\r\n            return ('undefined' !== typeof(this[key]) ? this[key] : defaultValue);\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Setter for the model internals\r\n         *\r\n         * @param {String} key\r\n         * @param {Mixed} value\r\n         * @return this for easy chaining.\r\n         */\r\n        set: function(key, value) {\r\n            var oldValue = this[key];\r\n            \r\n            //check same value exists, prevents the event from firing since nothing changed.\r\n            if (value !== oldValue) {\r\n                this[key] = value;\r\n                this.on(Events.CHANGE + key, this, value, oldValue);\r\n            }\r\n            \r\n            return this;\r\n        }\r\n    };\r\n    \r\n    return BaseModel;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/model/base_model.js\n ** module id = 9\n ** module chunks = 0\n **/","define([\n    \"../core\",\n], function(gPlayer) {\n    /**\n     * Events list\n     */\n    var Events = {\n        CHANGE: \"CHANGE:\",\n        PLAYER_READY: \"PLAYER_READY\"\n    };\n    \n    return Events;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/events/events.js\n ** module id = 10\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"./base_model\",\r\n    \"../events/states\",\r\n], function(gPlayer, BaseModel, States) {\r\n    /**\r\n     * Media Model\r\n     */\r\n    var MediaModel = function() {\r\n    };\r\n    \r\n    MediaModel.prototype = $.extend(true, {\r\n        state: States.IDLE\r\n    }, new BaseModel);\r\n    \r\n    return MediaModel;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/model/media_model.js\n ** module id = 11\n ** module chunks = 0\n **/","define([\n    \"../core\",\n], function(gPlayer) {\n    /**\n     * Player states list\n     */\n    var States = {\n        LOADING: \"LOADING\",\n        STALLED: \"STALLED\",\n        \n        BUFFERING : \"BUFFERING\",\n        IDLE: \"IDLE\",\n        COMPLETE: \"COMPLETE\",\n        PAUSED: \"PAUSED\",\n        PLAYING: \"PLAYING\",\n        CROSSFADING: \"CROSSFADING\",\n        ERROR: \"ERROR\"\n    };\n    \n    return States;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/events/states.js\n ** module id = 12\n ** module chunks = 0\n **/","define([\r\n    \"../core\",\r\n    \"../events/events\",\r\n    \"../utils/logger\",\r\n    \"../view/error\",\r\n], function(gPlayer, Events, Logger, Error) {\r\n    /**\r\n     * View\r\n     */\r\n    var View = function(controller, model, notifications) {\r\n        this._model = model;\r\n        this._controller = controller;\r\n        this._notifications = notifications;\r\n        \r\n        this.init(); // init constructor\r\n    };\r\n    \r\n    View.prototype = {\r\n        _model: null,\r\n        _controller: null,\r\n        _notifications: null,\r\n        \r\n        \r\n        /**\r\n         * Constructor for the view.\r\n         *\r\n         * @return this for chaining\r\n         */\r\n        init: function() {\r\n            Logger.debug('VIEW::INIT FIRED');\r\n            \r\n            return this;\r\n        },\r\n        \r\n        \r\n        /**\r\n         * Sets the view up :)\r\n         *\r\n         * @return this for chaining\r\n         */\r\n        setup: function() {\r\n            Logger.debug('VIEW::SETUP FIRED');\r\n            var t = new Error(11, 'aaa', 'bbbb', 'ccccccccc');\r\n            console.log(t);\r\n            \r\n            return this;\r\n        }\r\n    };\r\n    \r\n    return View;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/view/view.js\n ** module id = 13\n ** module chunks = 0\n **/","define([\n], function(errorHTML) {\n    /**\r\n     * Error template\r\n     *\r\n     * @param {Number} id\r\n     * @param {String} title\r\n     * @param {String} error\r\n     * @param {String} skin\r\n     */\r\n    var Error = function(id, title, error, skin) {\r\n        return errorHTML({\r\n            id: id,\r\n            title: title,\r\n            error: error,\r\n            skin: skin\r\n        });\r\n    };\r\n    \r\n    return Error;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/view/error.js\n ** module id = 14\n ** module chunks = 0\n **/","define([\n    \"../core\",\n    \"../core/api\"\n], function(gPlayer, API) {\n    /**\n     * gPlayer: jQuery plugin register\n     */\n    jQuery.fn.gPlayer = function (options) {\n        var args = Array.prototype.slice.call(arguments).slice(1);  //Convert it to a real Array object.\n        \n        // bind instance if none found\n        var create = (function(container) {\n            // return if instance already exists\n            if ('undefined' !== typeof(jQuery.gPlayerInstance)) return;\n            \n            var instance = new gPlayer(options || {})\n                .setEl(container)\n                .bootstrap();\n            \n            // @todo Change position, instance should be stored in a local scope rather than in jquert scope to have multiple instances\n            jQuery.gPlayerInstance = instance;\n        })(this);\n        \n        return API;\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/bind/jquery.js\n ** module id = 15\n ** module chunks = 0\n **/","define([\n    \"../core\"\n], function(gPlayer) {\n    \n    // Register as a named AMD module, since gPlayer can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase gPlayer is used because AMD module names are\n    // derived from file names, and gPlayer is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of gPlayer, it will work.\n    \n    // Note that for maximum portability, libraries that are not gPlayer should\n    // declare themselves as anonymous modules, and avoid setting a global if an\n    // AMD loader is present. gPlayer is a special case. For more information, see\n    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n    \n    if (typeof define === \"function\" && define.amd) {\n        define(\"gPlayer\", [], function() {\n            return gPlayer;\n        });\n    }\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/javascript/exports/amd.js\n ** module id = 16\n ** module chunks = 0\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzrnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;","sourceRoot":""}